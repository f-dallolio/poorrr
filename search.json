[{"path":"https://f-dallolio.github.io/poorrr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Filippo Dall’Olio Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://f-dallolio.github.io/poorrr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Filippo Dall'Olio. Author, maintainer.","code":""},{"path":"https://f-dallolio.github.io/poorrr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dall'Olio F (2025). poorrr: Package (One Line, Title Case). R package version 0.0.0.9000, https://f-dallolio.github.io/poorrr/, https://github.com/f-dallolio/poorrr.","code":"@Manual{,   title = {poorrr: What the Package Does (One Line, Title Case)},   author = {Filippo Dall'Olio},   year = {2025},   note = {R package version 0.0.0.9000, https://f-dallolio.github.io/poorrr/},   url = {https://github.com/f-dallolio/poorrr}, }"},{"path":"https://f-dallolio.github.io/poorrr/reference/accumulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Accumulate intermediate results of a vector reduction — accumulate","title":"Accumulate intermediate results of a vector reduction — accumulate","text":"Accumulate intermediate results vector reduction","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/accumulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accumulate intermediate results of a vector reduction — accumulate","text":"","code":"accumulate(.x, .f, ..., .init)"},{"path":"https://f-dallolio.github.io/poorrr/reference/detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the value or position of the first match — detect","title":"Find the value or position of the first match — detect","text":"Find value position first match","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the value or position of the first match — detect","text":"","code":"detect(.x, .f, ..., .right = FALSE, .p = is_true)  detect_index(.x, .f, ..., .right = FALSE, .p = is_true)"},{"path":"https://f-dallolio.github.io/poorrr/reference/every.html","id":null,"dir":"Reference","previous_headings":"","what":"Do every, some, or none of the elements of a list satisfy a predicate? — every","title":"Do every, some, or none of the elements of a list satisfy a predicate? — every","text":"every, , none elements list satisfy predicate?","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/every.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do every, some, or none of the elements of a list satisfy a predicate? — every","text":"","code":"every(.x, .p, ...)  some(.x, .p, ...)  none(.x, .p, ...)"},{"path":"https://f-dallolio.github.io/poorrr/reference/has_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Does a list contain an object? — has_element","title":"Does a list contain an object? — has_element","text":"list contain object?","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/has_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does a list contain an object? — has_element","text":"","code":"has_element(.x, .y)"},{"path":"https://f-dallolio.github.io/poorrr/reference/imap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to each element of a vector, and its index — imap","title":"Apply a function to each element of a vector, and its index — imap","text":"Apply function element vector, index","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/imap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to each element of a vector, and its index — imap","text":"","code":"imap(.x, .f, ...)  iwalk(.x, .f, ...)  imap_lgl(.x, .f, ...)  imap_int(.x, .f, ...)  imap_dbl(.x, .f, ...)  imap_chr(.x, .f, ...)"},{"path":"https://f-dallolio.github.io/poorrr/reference/is_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Does an object contains a unique value? — is_unique","title":"Does an object contains a unique value? — is_unique","text":"object contains unique value?","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/is_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does an object contains a unique value? — is_unique","text":"","code":"is_unique(x)"},{"path":"https://f-dallolio.github.io/poorrr/reference/keep.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep/discard elements based on their values — keep","title":"Keep/discard elements based on their values — keep","text":"Keep/discard elements based values","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/keep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep/discard elements based on their values — keep","text":"","code":"keep(.x, .f, ...)  discard(.x, .p, ...)  compact(.x)"},{"path":"https://f-dallolio.github.io/poorrr/reference/list_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine list elements into a single data structure — list_c","title":"Combine list elements into a single data structure — list_c","text":"Combine list elements single data structure","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/list_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine list elements into a single data structure — list_c","text":"","code":"list_c(x)  list_rbind(x)  list_cbind(x)"},{"path":"https://f-dallolio.github.io/poorrr/reference/list_flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten a list — list_flatten","title":"Flatten a list — list_flatten","text":"Flatten list","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/list_flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten a list — list_flatten","text":"","code":"list_flatten(x, ...)"},{"path":"https://f-dallolio.github.io/poorrr/reference/list_simplify.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify a list to an atomic or S3 vector — list_simplify","title":"Simplify a list to an atomic or S3 vector — list_simplify","text":"Simplify list atomic S3 vector","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/list_simplify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify a list to an atomic or S3 vector — list_simplify","text":"","code":"list_simplify(x, ..., strict = TRUE)"},{"path":"https://f-dallolio.github.io/poorrr/reference/list_transpose.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose a list — list_transpose","title":"Transpose a list — list_transpose","text":"Transpose list","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/list_transpose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose a list — list_transpose","text":"","code":"list_transpose(.l)"},{"path":"https://f-dallolio.github.io/poorrr/reference/map.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to each element of a vector — map","title":"Apply a function to each element of a vector — map","text":"Apply function element vector","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to each element of a vector — map","text":"","code":"map(.x, .f, ...)  walk(.x, .f, ...)  map_lgl(.x, .f, ...)  map_int(.x, .f, ...)  map_dbl(.x, .f, ...)  map_chr(.x, .f, ...)"},{"path":"https://f-dallolio.github.io/poorrr/reference/map2.html","id":null,"dir":"Reference","previous_headings":"","what":"Map over two inputs — map2","title":"Map over two inputs — map2","text":"Map two inputs","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/map2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map over two inputs — map2","text":"","code":"map2(.x, .y, .f, ...)  walk2(.x, .y, .f, ...)  map2_lgl(.x, .y, .f, ...)  map2_int(.x, .y, .f, ...)  map2_dbl(.x, .y, .f, ...)  map2_chr(.x, .y, .f, ...)"},{"path":"https://f-dallolio.github.io/poorrr/reference/map_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to each element of a vector conditionally — map_if","title":"Apply a function to each element of a vector conditionally — map_if","text":"Apply function element vector conditionally","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/map_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to each element of a vector conditionally — map_if","text":"","code":"map_if(.x, .p, .f, ..., .else = NULL)"},{"path":"https://f-dallolio.github.io/poorrr/reference/missing_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate or handle a missing argument — missing_arg","title":"Generate or handle a missing argument — missing_arg","text":"Generate handle missing argument","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/missing_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate or handle a missing argument — missing_arg","text":"","code":"missing_arg()"},{"path":"https://f-dallolio.github.io/poorrr/reference/modify_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify a pluck location — modify_in","title":"Modify a pluck location — modify_in","text":"Modify pluck location","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/modify_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify a pluck location — modify_in","text":"","code":"assign_in(x, where, value)"},{"path":"https://f-dallolio.github.io/poorrr/reference/negate.html","id":null,"dir":"Reference","previous_headings":"","what":"Negate a predicate function so it selects what it previously rejected — negate","title":"Negate a predicate function so it selects what it previously rejected — negate","text":"Negate predicate function selects previously rejected","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/negate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negate a predicate function so it selects what it previously rejected — negate","text":"","code":"negate(.p)"},{"path":"https://f-dallolio.github.io/poorrr/reference/pmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Map over multiple input simultaneously (in ","title":"Map over multiple input simultaneously (in ","text":"Map multiple input simultaneously (\"parallel\")","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/pmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map over multiple input simultaneously (in ","text":"","code":"pmap(.l, .f, ...)  pwalk(.l, .f, ...)  pmap_lgl(.l, .f, ...)  pmap_int(.l, .f, ...)  pmap_dbl(.l, .f, ...)  pmap_chr(.l, .f, ...)"},{"path":"https://f-dallolio.github.io/poorrr/reference/poorrr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"poorrr: What the Package Does (One Line, Title Case) — poorrr-package","title":"poorrr: What the Package Does (One Line, Title Case) — poorrr-package","text":"Poor Man's Dependency Free Recreation 'purrr'.","code":""},{"path":[]},{"path":"https://f-dallolio.github.io/poorrr/reference/poorrr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"poorrr: What the Package Does (One Line, Title Case) — poorrr-package","text":"Maintainer: Filippo Dall'Olio fdallolio@brocku.ca","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/reduce.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce a list to a single value by iteratively applying a binary function — reduce","title":"Reduce a list to a single value by iteratively applying a binary function — reduce","text":"Reduce list single value iteratively applying binary function","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/reduce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce a list to a single value by iteratively applying a binary function — reduce","text":"","code":"reduce(.x, .f, ..., .init)"},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-assn.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for dealing with assignment calls (usually from parse) — utils-assn","title":"Tools for dealing with assignment calls (usually from parse) — utils-assn","text":"Tools dealing assignment calls (usually parse)","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-assn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tools for dealing with assignment calls (usually from parse) — utils-assn","text":"","code":"get_assn_obj(x, env = globalenv())  get_assn_name(x)  eval_assn_call(x, env = globalenv())  deparse_assn_obj(x, env = globalenv())  deparse_assn_call(x, as_string = FALSE, env = globalenv())  string_assn_call(x, ..., as_string = TRUE, env = globalenv())"},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-bare-predicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities: Type predicates (bare) — utils-bare-predicates","title":"Utilities: Type predicates (bare) — utils-bare-predicates","text":"Utilities: Type predicates (bare)","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-bare-predicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities: Type predicates (bare) — utils-bare-predicates","text":"","code":"is_bare_atomic(x, n = NULL)  is_bare_character(x, n = NULL)  is_bare_double(x, n = NULL)  is_bare_integer(x, n = NULL)  is_bare_list(x, n = NULL)  is_bare_logical(x, n = NULL)  is_bare_numeric(x, n = NULL)  is_bare_vector(x, n = NULL)"},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-env.html","id":null,"dir":"Reference","previous_headings":"","what":"Get properties of the current or caller frame — utils-env","title":"Get properties of the current or caller frame — utils-env","text":"Get properties current caller frame","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get properties of the current or caller frame — utils-env","text":"","code":"env_parent(env = parent.frame(), n = 1)  env_get_list(   env = caller_env(),   nms = names(env),   default = list(NULL),   inherit = FALSE,   last = NULL,   mode = \"any\" )  env_get(   env = caller_env(),   nm,   default = NULL,   inherit = FALSE,   last = NULL,   mode = \"any\" )  env_names(env, sort = FALSE)  env_names_if(env, .p = NULL, ..., sort = FALSE)"},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Get properties of the current or caller frame — utils-frame","title":"Get properties of the current or caller frame — utils-frame","text":"Get properties current caller frame","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get properties of the current or caller frame — utils-frame","text":"","code":"current_env()  caller_env(n = 1)  caller_arg(arg)"},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-ns.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the namespace of a package — utils-ns","title":"Get the namespace of a package — utils-ns","text":"Get namespace package","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-ns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the namespace of a package — utils-ns","text":"","code":"ns_env(x = parent.frame())  ns_imports(ns, sort = TRUE)  ns_imports_env(x = parent.frame())  ns_import_from(ns, names, env = parent.frame())  ns_env_name(x = parent.frame())  ns_exports(ns, sort = TRUE)  ns_privates(ns, sort = TRUE)  ns_names(ns, sort = TRUE)  ns_exports_has(ns, name)"},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-scalar-predicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities: Type predicates (scalar) — utils-scalar-predicates","title":"Utilities: Type predicates (scalar) — utils-scalar-predicates","text":"Utilities: Type predicates (scalar)","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-scalar-predicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities: Type predicates (scalar) — utils-scalar-predicates","text":"","code":"is_scalar_numeric(x)  is_scalar_list(x)  is_scalar_logical(x)  is_scalar_vector(x)  is_string(x, string = NULL)  is_bool(x)"},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-standalone.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for managing standalone files from Github. — utils-standalone","title":"Tools for managing standalone files from Github. — utils-standalone","text":"Tools managing standalone files Github.","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-standalone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tools for managing standalone files from Github. — utils-standalone","text":"","code":"standalone_urls(repo, sort = TRUE)  standalone_choices(repo, sprt = TRUE)  standalone_select(nm, repo, use_grep = TRUE, sort = TRUE, simplify = TRUE)  standalone_get(   repo,   nm = \".\",   dest_dir = \"code/standalone\",   ...,   use_grep = TRUE,   sort = TRUE,   simplify = TRUE )  choose_standalones(   repo,   dest_dir = \"R\",   multiple = TRUE,   ...,   use_grep = TRUE,   sort = TRUE,   simplify = TRUE )  local_standalones(dir, pattern = \"standalone-\", full_path = FALSE)  standalone_info(   repo,   nm = NULL,   use_grep = TRUE,   sort = FALSE,   simplify = TRUE )  # S3 method for class 'standalone_info' print(x)"},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-type-predicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities: Type predicates — utils-type-predicates","title":"Utilities: Type predicates — utils-type-predicates","text":"Utilities: Type predicates","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-type-predicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities: Type predicates — utils-type-predicates","text":"","code":"is_atomic(x, n = NULL)  is_character(x, n = NULL)  is_double(x, n = NULL, finite = NULL)  is_integer(x, n = NULL)  is_numeric(x, n = NULL)  is_list(x, n = NULL)  is_logical(x, n = NULL)  is_vector(x, n = NULL)"}]
