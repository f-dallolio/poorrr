[{"path":"https://f-dallolio.github.io/poorrr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Filippo Dall’Olio Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://f-dallolio.github.io/poorrr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Filippo Dall'Olio. Author, maintainer.","code":""},{"path":"https://f-dallolio.github.io/poorrr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dall'Olio F (2025). poorrr: Package (One Line, Title Case). R package version 0.0.0.9000, https://f-dallolio.github.io/poorrr/, https://github.com/f-dallolio/poorrr.","code":"@Manual{,   title = {poorrr: What the Package Does (One Line, Title Case)},   author = {Filippo Dall'Olio},   year = {2025},   note = {R package version 0.0.0.9000, https://f-dallolio.github.io/poorrr/},   url = {https://github.com/f-dallolio/poorrr}, }"},{"path":"https://f-dallolio.github.io/poorrr/reference/poorrr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"poorrr: What the Package Does (One Line, Title Case) — poorrr-package","title":"poorrr: What the Package Does (One Line, Title Case) — poorrr-package","text":"Poor Man's Dependency Free Recreation 'purrr'.","code":""},{"path":[]},{"path":"https://f-dallolio.github.io/poorrr/reference/poorrr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"poorrr: What the Package Does (One Line, Title Case) — poorrr-package","text":"Maintainer: Filippo Dall'Olio fdallolio@brocku.ca","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-string.html","id":null,"dir":"Reference","previous_headings":"","what":"Common string operations replacing stringr functions. — utils-string","title":"Common string operations replacing stringr functions. — utils-string","text":"Common string operations replacing stringr functions.","code":""},{"path":"https://f-dallolio.github.io/poorrr/reference/utils-string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common string operations replacing stringr functions. — utils-string","text":"","code":"str_flatten_comma(string, last = \"and\", na.rm = FALSE, oxford = TRUE)  str_flatten(string, collapse = \"\", last = NULL, na.rm = FALSE)  str_detect(   string,   pattern,   negate = FALSE,   ...,   ignore.case = FALSE,   perl = FALSE,   fixed = FALSE,   useBytes = FALSE )  str_which(   string,   pattern,   negate = FALSE,   ...,   ignore.case = FALSE,   perl = FALSE,   fixed = FALSE,   useBytes = FALSE )  str_subset(   string,   pattern,   negate = FALSE,   ...,   ignore.case = FALSE,   perl = FALSE,   fixed = FALSE,   useBytes = FALSE )  str_replace(   string,   pattern,   replacement,   ...,   ignore.case = FALSE,   perl = FALSE,   fixed = FALSE,   useBytes = FALSE )  str_replace_all(   string,   pattern,   replacement,   ...,   ignore.case = FALSE,   perl = FALSE,   fixed = FALSE,   useBytes = FALSE )  str_remove(   string,   replacement,   ...,   ignore.case = FALSE,   perl = FALSE,   fixed = FALSE,   useBytes = FALSE )  str_remove_all(   string,   replacement,   ...,   ignore.case = FALSE,   perl = FALSE,   fixed = FALSE,   useBytes = FALSE )  str_pad(   string,   width = NULL,   side = c(\"left\", \"right\", \"both\"),   pad = \" \",   use_width = TRUE )  str_numpad(x)  str_enum(x, side = c(\"right\", \"left\"), sep = \"\")  str_enum_left(x, sep = \"\")  str_enum_right(x, sep = \"\")"}]
